# -*- coding: utf-8 -*-
"""BC_5A.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ImjTpdALKBvhKQErWzOUuhddh9P_bs4E
"""

# A simple client class that generates the private and public keys by using the built in Python RSA algorithm and test it

#!pip install pycryptodome
import binascii
import Crypto
import Crypto.Random
from Crypto.Hash import SHA
from Crypto.PublicKey import RSA
from Crypto.Signature import PKCS1_v1_5

class Client:
  def __init__(self):
    random = Crypto.Random.new().read
    self._private_key = RSA.generate(1024, random)
    self._public_key = self._private_key.publickey()
    self._signer = PKCS1_v1_5.new(self._private_key)

  @property
  def identity(self):
    return binascii.hexlify(self._public_key.exportKey(format='DER')).decode('ascii')

Raja=Client()
print(Raja.identity)
